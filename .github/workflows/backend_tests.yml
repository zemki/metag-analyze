name: Backend Tests

on:
  push:
    branches:
      - main
      - mart-integration
  pull_request:

jobs:
  ci:
    name: Backend Unit Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: metagtesting
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy .env file
        run: cp .env.testing .env

      - name: Set Environment Variables
        run: php artisan key:generate

      - name: Update database password for CI
        run: |
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env

      - name: Create MART database
        run: mysql -h127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS metagtesting_mart;"

      - name: Verify databases exist
        run: |
          echo "Checking databases..."
          mysql -h127.0.0.1 -uroot -proot -e "SHOW DATABASES LIKE 'metagtesting%';"

      - name: Run Migrations
        run: php artisan migrate --no-interaction --force

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install front-end dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Run Tests
        run: ./vendor/bin/pest
